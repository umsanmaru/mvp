{"version":3,"sources":["components/ScoringUnit.js","components/UserBoard.js","firebase/storageInit.js","components/Loader.js","components/QuestionBoard.js","components/Timer.js","firebase/databaseInit.js","components/MatchEnd.js","components/Match.js","firebase/authInit.js","components/LoginLayout.js","components/SignUpLayout.js","components/Rules.js","components/UserPage.js","components/MyPage.js","components/MatchingPage.js","components/ErrorMessage.js","App.js","reportWebVitals.js","index.js"],"names":["ScoringUnit","color","state","qNum","includes","style","Grid","textAlign","marginTop","Column","width","Segment","UserBoard","userInfo","gid","uid","db","useState","scoring","setScoring","sum","setSum","scoringBoard","useEffect","ref","listner","on","data","val","current","Object","values","off","map","score","slice","set","total","timeAt","Date","now","Row","name","school","grade","rating","storageInit","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","LoaderV2","text","Dimmer","active","inverted","Loader","imgCash","QuestionBoard","setQNum","qList","setQList","choiceSet","setChoiceSet","imgSrc","setImgSrc","answer","setAnswer","checked","setChecked","qSelectButton","renderedChoiceSet","console","log","handleChange","e","value","snap","get","then","questionInfo","exists","currentAns","getDownloadURL","url","choice","n","Form","Radio","label","onChange","dbQNum","index","onClick","onQNumClick","className","src","alt","paddingTop","Group","widths","Button","res","prev","userInteraction","push","0","Timer","startTime","setStartTime","minutes","setMinutes","seconds","setSeconds","currentTime","leftTime","Math","round","leftM","floor","leftS","countdown","setInterval","clearInterval","dbInit","database","MatchEnd","result","marginBottom","height","size","Match","oid","opponentInfo","isOver","setIsOver","setResult","resultDone","setResultDone","writeResult","user_info","rank","win","lose","min","max","playerScore","opponentScore","centered","authInit","auth","LoginForm","onLogin","onSignUpLoad","children","verticalAlign","maxWidth","Header","as","stacked","Input","fluid","icon","iconPosition","placeholder","type","Message","cursor","ratingOptions","key","gradeOptions","SignUpForm","onSignUp","onLoginLoad","Select","options","Rules","activeIndex","isActive","setState","handleClick","titleProps","newIndex","this","Accordion","Title","Icon","Content","marginLeft","Component","UserPage","hover","setHover","onHover","button","onMouseEnter","onMouseLeave","React","cloneElement","secondary","raised","Container","columns","Divider","rankMap","1","2","3","MyPage","onLogout","marginRight","display","MatchingPage","ready","setReady","vsReady","setVsReady","second","setSecond","setTimeout","snapshot","players","entries","forEach","player","nick_name","marginBotton","ErrorMessage","errorMessage","message","setMessage","id","App","setUid","setGid","setOid","setUserInfo","setOpponentInfo","status","setStatus","userRef","getUserInfo","a","currentUserInfo","getGid","child","currentGid","getOid","playerObject","keys","listener","currentStatus","onAuthStateChanged","user","currentUid","signOut","document","querySelectorAll","password","nickName","createUserWithEmailAndPassword","userCredential","innerHTML","catch","error","signInWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a82a1fb9.chunk.js","sourcesContent":["import { Grid, Segment } from 'semantic-ui-react'\r\n\r\nconst ScoringUnit = ({state, qNum})  => {\r\n    let color\r\n    if(!state) {\r\n        state=<h4 style={{color:\"grey\"}}>시도 안함</h4>\r\n        color=null\r\n    }else if(state.includes(\"O\")){\r\n        color=\"green\"\r\n    }else{ color=\"red\" } \r\n    return(\r\n        <Grid textAlign='center' style={{marginTop:'0.5vh'}}>\r\n            <Grid.Column width={6}>\r\n                <Segment>\r\n                    <h3>{`${qNum+1}`}</h3>\r\n                </Segment>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <Segment color={color}>\r\n                    {state}\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ScoringUnit","import React, {useState, useEffect} from 'react'\r\nimport ScoringUnit from './ScoringUnit'\r\nimport { Grid, Segment } from 'semantic-ui-react'\r\n\r\nconst UserBoard = ({userInfo, gid, uid, db}) => {\r\n    const [scoring, setScoring] = useState([0 ,0 ,0, 0, 0])\r\n    const [sum, setSum] = useState(0)\r\n    let scoringBoard = null\r\n    \r\n    useEffect(() => {\r\n        const ref = db.ref('game_list/bronze/' + gid + '/scoring/' + uid)\r\n        const listner = ref.on('value', (data) =>{\r\n            if(!data.val()) return\r\n            const current = Object.values(data.val())\r\n            setScoring(Object.values(current))\r\n        });\r\n        return () => {\r\n            ref.off('value', listner)\r\n        }\r\n    }, [gid, uid])\r\n\r\n    useEffect(() => {\r\n        if(!gid || !uid) return\r\n        let sum = 0\r\n        scoring.map((score)=>{\r\n            while(score){\r\n                if(score[0]===\"O\") {\r\n                    sum+=4\r\n                    break\r\n                }else {\r\n                    sum -= 1\r\n                    score = score.slice(1)\r\n                }\r\n            }\r\n        })\r\n        if(sum<0) sum = 0\r\n        setSum(sum)\r\n        db.ref('game_list/bronze/' + gid + '/score/' + uid).set({total: sum, timeAt: Date.now()})\r\n    }, [scoring])\r\n\r\n    if(scoring){\r\n        scoringBoard = scoring.map(\r\n            (state, qNum)=> <ScoringUnit state={state} qNum={qNum}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Segment color='grey'>\r\n                <Grid textAlign='center'>\r\n                    <Grid.Row>\r\n                        <h2>{userInfo.name}</h2>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <h4>\r\n                            {`${userInfo.school} / ${userInfo.grade}학년 / 모의고사 ${userInfo.rating}등급`}\r\n                        </h4>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment color='grey'>\r\n                {scoringBoard}\r\n                <Segment textAlign='center' style={{marginTop:'3vh'}}>\r\n                    <h3>{`현재 점수: ${sum}`}</h3>\r\n                </Segment>\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserBoard","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nconst storageInit = () => {\r\n    var firebaseConfig = {\r\n        apiKey: \"AIzaSyC3qyHC3nf9BwIJfB8BqWDLPuJZ7bcKWnw\",\r\n        authDomain: \"mvp-db-ecbe5.firebaseapp.com\",\r\n        databaseURL: \"https://mvp-db-ecbe5-default-rtdb.firebaseio.com\",\r\n        projectId: \"mvp-db-ecbe5\",\r\n        storageBucket: \"mvp-db-ecbe5.appspot.com\",\r\n        messagingSenderId: \"57354889627\",\r\n        appId: \"1:57354889627:web:1fb6de97d88dcfeca9d93e\",\r\n        measurementId: \"G-FVJJG0261W\"\r\n    };\r\n    if(!firebase.apps.length){\r\n        firebase.initializeApp(firebaseConfig);\r\n    }else{\r\n        firebase.app()\r\n    }\r\n    return firebase.storage();\r\n}\r\n\r\nexport default storageInit;","import React from 'react'\r\nimport { Loader, Dimmer } from 'semantic-ui-react'\r\n\r\nconst LoaderV2 = ({text}) => {\r\n    return (\r\n        <Dimmer active inverted>\r\n            <Loader> <h3>{text ? text : \"로딩 중\"}</h3>  </ Loader>\r\n        </Dimmer>\r\n    )\r\n}\r\n\r\nexport default LoaderV2","import React, {useState, useEffect} from 'react'\r\nimport storageInit from '../firebase/storageInit'\r\nimport LoaderV2 from './Loader'\r\nimport { Grid, Segment, Form, Button } from 'semantic-ui-react'\r\n\r\nvar storage = storageInit()\r\nvar imgCash = [null, null, null, null, null]\r\n\r\nconst QuestionBoard = ({gid, uid, db}) => {\r\n    const [qNum, setQNum] = useState(null)\r\n    const [qList, setQList] = useState([])\r\n    const [choiceSet, setChoiceSet] = useState([])\r\n    const [imgSrc, setImgSrc] = useState(null)\r\n    const [answer, setAnswer] = useState(null)\r\n    const [checked, setChecked] = useState(0)\r\n    let qSelectButton = null\r\n    let renderedChoiceSet = null\r\n\r\n    console.log(qList)\r\n    const handleChange = (e, { value }) => {\r\n        setChecked(value)\r\n    }\r\n    \r\n    const onQNumClick = (dbQNum)=>{\r\n        if(qNum !== dbQNum){\r\n            setQNum(dbQNum)\r\n            setImgSrc(null)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!qNum) setQNum(qList[0])\r\n    }, [qList])\r\n\r\n    useEffect(() => {\r\n        const ref = db.ref(\"game_list/bronze/\" + gid + '/qList')\r\n        const listner = ref.on('value', (snap) => {\r\n            if(snap.val()) {\r\n                setQList(snap.val())\r\n            }\r\n        })\r\n        return () => {\r\n            ref.off('value', listner)\r\n        }\r\n    }, [gid])\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if(!qNum) return\r\n        db.ref('question_info/' + qNum).get().then((questionInfo)=>{\r\n            if(questionInfo.exists()){\r\n                questionInfo = questionInfo.val()\r\n                const choiceSet = questionInfo[\"choices\"]\r\n                setChoiceSet(choiceSet)           \r\n                const currentAns = questionInfo[\"answer\"]\r\n                setAnswer(currentAns)\r\n            }else{\r\n                setChoiceSet([1, 2, 3, 4, 5])\r\n                setChecked(0)\r\n                setAnswer(1)\r\n            }\r\n        })\r\n    }, [qNum])\r\n\r\n    useEffect(() => {\r\n        console.log(imgCash[qNum])\r\n        if(!qNum) return\r\n        if(imgCash[qNum]) {\r\n            setImgSrc(imgCash[qNum])\r\n            return\r\n        }\r\n        storage.ref(`questions/question${qNum}.jpg`).getDownloadURL().then((url)=>{\r\n            console.log(url)\r\n            imgCash[qNum] = url\r\n            setImgSrc(url)\r\n        })\r\n    }, [qNum])\r\n\r\n\r\n    const onSubmit = ()=>{\r\n        const res = (checked == answer-1) ? \"O\" : \"X\"\r\n        db.ref('game_list/bronze/' + gid + '/scoring/' + uid + '/' + qNum).get()\r\n            .then((data) =>{\r\n                const prev = data.val() ? data.val() : \"\"\r\n                if(!prev.includes(\"O\")){\r\n                    db.ref('game_list/bronze/' + gid + '/scoring/' + uid + '/' + qNum)\r\n                        .set(prev+res)\r\n                } \r\n            })\r\n        if(res === \"O\"){\r\n            db.ref('user_interaction/' + uid).get().then((snap) => {\r\n                let userInteraction = snap.val()\r\n                console.log(userInteraction)\r\n                if(!userInteraction){\r\n                    db.ref('user_interaction/' + uid).set({0: qNum})\r\n                }else{\r\n                    console.log(userInteraction)\r\n                    if(!userInteraction.includes(qNum)) userInteraction.push(qNum)\r\n                    db.ref('user_interaction/' + uid).set(userInteraction)        \r\n                }\r\n            })\r\n        }\r\n            \r\n    }\r\n\r\n    if(choiceSet){\r\n        renderedChoiceSet = choiceSet.map((choice, n) => {\r\n            return <Form.Radio\r\n                label={choice}\r\n                value={n}\r\n                checked={checked === n}\r\n                onChange={handleChange}\r\n            />\r\n        })\r\n    }\r\n\r\n    if(qList){\r\n        qSelectButton = qList.map((dbQNum, index)=>{\r\n            return (\r\n                <div \r\n                    onClick={() => onQNumClick(dbQNum)} \r\n                    className={`ui ${dbQNum===qNum ? \"active\" : \"\"} button`}\r\n                >{`Q${index+1}`}</div>\r\n            )\r\n        })\r\n    }\r\n\r\n    if(qList.length === 0) return <LoaderV2 text={\"문제 생성중\"}/> \r\n    return (\r\n        <Segment textAlign='center'>\r\n            {imgSrc ? null : <LoaderV2 text={\"문제 로딩중\"}/>}\r\n            <Grid.Row>\r\n                {qSelectButton}          \r\n            </Grid.Row>\r\n            {imgSrc ? \r\n                <img width=\"100%\" src={imgSrc} alt=\"why not working?\"></img> :\"\"}\r\n            <Segment style={{paddingTop: '3vh'}}>\r\n                <Form>\r\n                    <Form.Group widths='equal'>{renderedChoiceSet}</Form.Group>\r\n                </Form>\r\n                <Button style={{marginTop: '3vh'}} onClick={onSubmit}>제출</Button>\r\n            </Segment>\r\n        </Segment>        \r\n    )\r\n}\r\n\r\nexport default QuestionBoard","import React, {useState, useEffect} from 'react'\r\nimport {Segment} from 'semantic-ui-react'\r\n\r\nconst Timer = ({uid, db, gid}) => {\r\n    const [startTime, setStartTime] = useState(null)\r\n    const [minutes, setMinutes] = useState(\"0\");\r\n    const [seconds, setSeconds] = useState(\"0\");\r\n\r\n    useEffect(() => {\r\n      const ref = db.ref('game_list/bronze/' + gid + '/startTime/' + uid)\r\n      const listner = ref.on('value', (snap)=>{\r\n        if(!startTime && snap.val()){\r\n          setStartTime(snap.val())\r\n        }\r\n      })\r\n      return () => {\r\n        ref.off('value', listner)\r\n      }\r\n    }, [gid, uid])\r\n    \r\n    useEffect(() => {\r\n      if(minutes<0 || (minutes===0 && seconds===0)) {\r\n        console.log('here')\r\n        setSeconds(0)\r\n        setMinutes(0)\r\n        db.ref('game_list/bronze/' + gid + '/isOver').set(true)\r\n        return \r\n      }\r\n\r\n      if(startTime){\r\n        const currentTime = Date.now()\r\n        const passedTime = Math.round((currentTime - startTime)/1000)\r\n        const leftTime = 2400 - passedTime\r\n        let leftM = Math.floor(leftTime/60)\r\n        let leftS = leftTime - leftM * 60\r\n        const countdown = setInterval(() => {\r\n          setSeconds(leftS)\r\n          setMinutes(leftM)\r\n        }, 1000);\r\n        return () => clearInterval(countdown);\r\n        \r\n      }      \r\n    }, [startTime, minutes, seconds])\r\n  \r\n    return (\r\n        <Segment textAlign='center' inverted color='blue'>\r\n          <h1>\r\n              {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n          </h1>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default Timer","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst dbInit = () => {\r\n    var firebaseConfig = {\r\n        apiKey: \"AIzaSyC3qyHC3nf9BwIJfB8BqWDLPuJZ7bcKWnw\",\r\n        authDomain: \"mvp-db-ecbe5.firebaseapp.com\",\r\n        databaseURL: \"https://mvp-db-ecbe5-default-rtdb.firebaseio.com\",\r\n        projectId: \"mvp-db-ecbe5\",\r\n        storageBucket: \"mvp-db-ecbe5.appspot.com\",\r\n        messagingSenderId: \"57354889627\",\r\n        appId: \"1:57354889627:web:1fb6de97d88dcfeca9d93e\",\r\n        measurementId: \"G-FVJJG0261W\"\r\n    };\r\n    if(!firebase.apps.length){\r\n        firebase.initializeApp(firebaseConfig);\r\n    }else{\r\n        firebase.app()\r\n    }\r\n    return firebase.database();\r\n}\r\n\r\nexport default dbInit;","import React from 'react'\r\nimport { Grid, Button, Segment } from 'semantic-ui-react'\r\n\r\nconst rankMap = {1:\"bronze\", 2:\"silver\", 3:\"gold\"}\r\n\r\nconst MatchEnd = ({db, uid, result, userInfo}) => {\r\n    const onClick = () => {\r\n        db.ref('user_info/' + uid + '/status').set(\"isWaiting\")\r\n        db.ref('matching_info/'+'bronze/' + uid).set(null)\r\n        db.ref('user_info/' + uid + '/game_id').set(null)\r\n    }\r\n\r\n    let color, text\r\n    \r\n    if(result === 'W') {\r\n        color = 'blue'\r\n        text = 'You Win!!!'\r\n    }else {\r\n        color = 'red'\r\n        text = 'You lose...'\r\n    }\r\n\r\n    return (\r\n        <Grid textAlign='center'>\r\n            <Grid.Row style={{marginTop:'30vh', marginBottom:'15vh', height:'30vh', width:'50vw'}}>\r\n                <Segment \r\n                    size='massive' \r\n                    inverted color={color}\r\n                    style={{width:'50vw'}} \r\n                    textAlign='center'  \r\n                >\r\n                    <h1 style={{marginTop:'6vh'}}>{text}</h1>\r\n                </Segment>\r\n            </Grid.Row>\r\n            <Button onClick={onClick}>돌아가기</Button>\r\n        </Grid>\r\n    )    \r\n}\r\n\r\nexport default MatchEnd","import React, {useState, useEffect} from 'react';\nimport UserBoard from './UserBoard';\nimport QuestionBoard from './QuestionBoard';\nimport Timer from './Timer';\nimport dbInit from '../firebase/databaseInit'\nimport { Grid } from 'semantic-ui-react'\nimport LoaderV2 from './Loader';\nimport MatchEnd from './MatchEnd'\n\nconst db = dbInit()\nconst rankMap = {1:\"bronze\", 2:\"silver\", 3:\"gold\"}\n\n\nconst Match = ({uid, oid, gid, userInfo, opponentInfo}) => {\n  \n  const [isOver, setIsOver] = useState(\"unchecked\")\n  const [result, setResult] = useState()\n  const [resultDone, setResultDone] = useState(\"unchecked\")\n  \n  const writeResult = (result) => {\n    if(resultDone===\"unchecked\" || resultDone) return\n    db.ref('user_info/' + uid).get().then((snap) => {\n      const user_info = snap.val()\n      const {current, rank} = user_info\n      if(current[result] == 1){\n        db.ref('user_info/' + uid + '/current').set({win:0, lose:0})\n        if(result === 'win'){\n          db.ref('user_info/' + uid + '/rank').set(Math.min(rank + 1, 3))\n        }\n        else if(result === 'lose'){\n          db.ref('user_info/' + uid + '/rank').set(Math.max(rank - 1, 1))\n        }\n      }else{\n        db.ref('user_info/' + uid + '/current/' + result).set(1)\n      }\n    })\n    db.ref('user_info/' + uid + '/total/' + result).get().then((snap) => {\n      db.ref('user_info/' + uid + '/total/' + result).set(snap.val() + 1)\n    }) \n  }\n\n  useEffect(() => {\n    const ref = db.ref('game_list/' + 'bronze/' +gid + '/isOver')\n    const listner = ref.on('value', (snap)=>{\n      setIsOver(!(!snap.val()))\n    })\n    return () => {\n      ref.off('value', listner)\n    }\n  }, []) \n  \n  \n  useEffect(() => {\n    const ref = db.ref('game_list/'+ +'bronze/'+gid+'/resultDone/'+uid)\n    const listner = ref.on('value', (snap)=>{\n      setResultDone(snap.val())\n    })\n    return () => {\n      ref.off('value', listner)\n    }\n  }, [])\n\n  \n  useEffect(() => {\n    console.log(isOver, resultDone)\n    if(isOver===\"unchecked\" || !isOver) return\n    db.ref('game_list/'+'bronze/' + gid + '/score').get().then((snap) => {\n      const score = snap.val()\n      const playerScore = score[uid].total\n      const opponentScore = score[oid].total\n      if(playerScore == opponentScore){\n        console.log(uid, oid)\n        if(score[uid].timeAt < score[oid].timeAt){\n          setResult('W')      \n          writeResult('win')\n        }else {\n          setResult('L')\n          writeResult('lose')\n        }\n      }\n      else if(playerScore > opponentScore){\n        setResult('W')\n        writeResult('win')\n      }else {\n        setResult('L')\n        writeResult('lose')\n      }\n    }).then(() => {\n      db.ref('game_list/'+'bronze/' + gid + '/resultDone/'+uid).set(true)\n    })\n  }, [isOver, resultDone])\n  console.log(isOver)\n  if(isOver===\"unchecked\") return <LoaderV2 text={'로딩 중...'} />\n  if(isOver) {\n    if(!result) return <LoaderV2 text={'결과 계산 중...'} /> \n    return <MatchEnd uid={uid} db={db} result={result} userInfo={userInfo}/>\n  }\n  return (\n    <Grid centered>\n      <Grid.Row style={{ marginTop: '3vh'}}>\n        <Grid.Column width={4}>\n          <UserBoard userInfo={userInfo} gid={gid} db={db} uid={uid}/>\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <Timer db={db} gid={gid} uid={uid}/>\n          <QuestionBoard gid={gid} uid={uid} db={db}/>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <UserBoard userInfo={opponentInfo} gid={gid} db={db} uid={oid}/>\n        </Grid.Column>\n        </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default Match;\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst authInit = () => {\r\n    var firebaseConfig = {\r\n        apiKey: \"AIzaSyC3qyHC3nf9BwIJfB8BqWDLPuJZ7bcKWnw\",\r\n        authDomain: \"mvp-db-ecbe5.firebaseapp.com\",\r\n        databaseURL: \"https://mvp-db-ecbe5-default-rtdb.firebaseio.com\",\r\n        projectId: \"mvp-db-ecbe5\",\r\n        storageBucket: \"mvp-db-ecbe5.appspot.com\",\r\n        messagingSenderId: \"57354889627\",\r\n        appId: \"1:57354889627:web:1fb6de97d88dcfeca9d93e\",\r\n        measurementId: \"G-FVJJG0261W\"\r\n    };\r\n    if(!firebase.apps.length){\r\n        firebase.initializeApp(firebaseConfig);\r\n    }else{\r\n        firebase.app()\r\n    }\r\n    return firebase.auth();\r\n}\r\n\r\nexport default authInit;","import React from 'react'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\n\r\nconst LoginForm = ({ onLogin, onSignUpLoad, children }) => (\r\n\r\n  <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 450 }}>\r\n      <Header as='h2' color='blue' textAlign='center'>\r\n        Log-in to your account\r\n      </Header>\r\n      <Form size='large'>\r\n        <Segment stacked>\r\n          <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\r\n          <Form.Input fluid icon='lock' iconPosition='left' placeholder='Password' type='password'/>\r\n\r\n          <Button color='blue' fluid size='large' onClick={onLogin}>\r\n            Login\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n      <Message>\r\n        New to us? <a style={{cursor: 'pointer'}} onClick={onSignUpLoad}>Sign Up</a>\r\n      </Message>\r\n      {children}\r\n    </Grid.Column>\r\n  </Grid>\r\n)\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\n\r\nconst ratingOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9].map((n) => {\r\n  return {key: n, text: n, value: n}\r\n})\r\n\r\nconst gradeOptions = [1, 2, 3].map((n) => {\r\n  return {key: n, text: n, value: n}\r\n})\r\n\r\nconst SignUpForm = ({ onSignUp, onLoginLoad, children }) => (\r\n\r\n  <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 450 }}>\r\n      <Header as='h2' color='blue' textAlign='center'>\r\n        Sign Up with email\r\n      </Header>\r\n      <Form size='large'>\r\n        <Segment textAlign='left' stacked>\r\n          <Form.Input fluid label='이메일' placeholder='E-mail address' />\r\n          <Form.Input fluid label='비밀번호' placeholder='Password' type='password'/>\r\n          <Form.Group widths='equal'>\r\n            <Form.Input label=\"이름\" fluid placeholder='홍길동'/>\r\n            <Form.Input label=\"닉네임\" fluid placeholder='수학대장'/>\r\n          </Form.Group>         \r\n          <Form.Input label=\"학교\" fluid placeholder='휘문고등학교'/>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Select\r\n              fluid\r\n              label='학년'\r\n              options={gradeOptions}\r\n            />\r\n            <Form.Select\r\n              fluid\r\n              label='모의고사 등급'\r\n              options={ratingOptions}\r\n            />\r\n          </Form.Group>\r\n          <Button color='blue' fluid size='large' onClick={onSignUp}>\r\n            Sign Up\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n      <Message>\r\n        Have an account? <a style={{cursor: 'pointer'}} onClick={onLoginLoad}>Login</a>\r\n      </Message>\r\n      {children}\r\n    </Grid.Column>\r\n  </Grid>\r\n)\r\n\r\nexport default SignUpForm","import React, { Component } from 'react'\r\nimport { Accordion, Icon } from 'semantic-ui-react'\r\n\r\nexport default class Rules extends Component {\r\n  state = { activeIndex: null, isActive: false }\r\n\r\n  onClick = () => {\r\n    this.setState({isActive: !this.state.isActive})\r\n  }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    const { activeIndex } = this.state\r\n    const newIndex = activeIndex === index ? -1 : index\r\n\r\n    this.setState({ activeIndex: newIndex })\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex, isActive } = this.state\r\n\r\n    return (\r\n      <Accordion>\r\n        <Accordion.Title\r\n          active={isActive}\r\n          onClick={this.onClick}\r\n        >\r\n          <h3><Icon name='dropdown' />Rules</h3>\r\n        </Accordion.Title>\r\n        <Accordion.Content active={isActive} style = {{ paddingTop:'0vw' }}>\r\n          <Accordion style = {{ marginLeft:'3vw' }}>\r\n            <Accordion.Title\r\n              active={activeIndex === 0}\r\n              index={0}\r\n              onClick={this.handleClick}\r\n            >\r\n              <h4>\r\n                <Icon name='dropdown' />\r\n                What is a dog?\r\n              </h4>\r\n            </Accordion.Title>\r\n            <Accordion.Content active={activeIndex === 0}>\r\n              <p>\r\n                A dog is a type of domesticated animal. Known for its loyalty and\r\n                faithfulness, it can be found as a welcome guest in many households\r\n                across the world.\r\n              </p>\r\n            </Accordion.Content>\r\n\r\n            <Accordion.Title\r\n              active={activeIndex === 1}\r\n              index={1}\r\n              onClick={this.handleClick}\r\n            >\r\n              <h4>\r\n                <Icon name='dropdown' />\r\n                What kinds of dogs are there?\r\n              </h4>\r\n            </Accordion.Title>\r\n            <Accordion.Content active={activeIndex === 1}>\r\n              <p>\r\n                There are many breeds of dogs. Each breed varies in size and\r\n                temperament. Owners often select a breed of dog that they find to be\r\n                compatible with their own lifestyle and desires from a companion.\r\n              </p>\r\n            </Accordion.Content>\r\n\r\n            <Accordion.Title\r\n              active={activeIndex === 2}\r\n              index={2}\r\n              onClick={this.handleClick}\r\n            >\r\n              <h4>\r\n                <Icon name='dropdown' />\r\n                How do you acquire a dog?\r\n              </h4>\r\n            </Accordion.Title>\r\n            <Accordion.Content active={activeIndex === 2}>\r\n              <p>\r\n                Three common ways for a prospective owner to acquire a dog is from\r\n                pet shops, private owners, or shelters.\r\n              </p>\r\n              <p>\r\n                A pet shop may be the most convenient way to buy a dog. Buying a dog\r\n                from a private owner allows you to assess the pedigree and\r\n                upbringing of your dog before choosing to take it home. Lastly,\r\n                finding your dog from a shelter, helps give a good home to a dog who\r\n                may not find one so readily.\r\n              </p>\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </Accordion.Content>\r\n          \r\n      </Accordion>\r\n      \r\n    )\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { Grid, Container, Divider, Segment } from 'semantic-ui-react'\r\n\r\n\r\n\r\nconst UserPage = ({children, onClick, text, userInfo}) => {\r\n    \r\n    const [hover, setHover] = useState(false)\r\n\r\n    console.log(userInfo)\r\n\r\n    const onHover = (on) => {\r\n        if(on) setHover(true)\r\n        else setHover(false)\r\n    }\r\n\r\n    var button = (\r\n    <Segment \r\n        onClick={onClick}\r\n        style={{ marginTop: '10vh' }} \r\n        inverted color = 'blue'\r\n        textAlign='center' \r\n        size= 'large'\r\n        onMouseEnter={() => onHover(true)} \r\n        onMouseLeave={() => onHover(false)}\r\n    >\r\n        <h2>{text}</h2>\r\n    </Segment>\r\n    )\r\n    \r\n    if(hover) button = React.cloneElement(button, {secondary: true})\r\n    \r\n    return (    \r\n        <Segment raised>\r\n            <Segment color='blue' textAlign='center' size='large'>\r\n                {children}\r\n            </Segment>\r\n            <Container style={{ marginTop: '7vh' }}>\r\n                <Grid columns={2} textAlign='center'>\r\n                    <Grid.Column style={{ maxWidth: 400}}>\r\n                        <h4>현재</h4>\r\n                        <Divider />\r\n                        <Container>\r\n                            <h3>{`${userInfo.current.win}승 ${userInfo.current.lose}패`}</h3>\r\n                        </Container>\r\n                    </Grid.Column>\r\n                    <Grid.Column style={{ maxWidth: 400 }}>\r\n                        <h4>전체</h4>\r\n                        <Divider />\r\n                        <Container>\r\n                            <h3>{`${userInfo.total.win}승 ${userInfo.total.lose}패`}</h3>\r\n                        </Container>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                {button}\r\n            </Container>    \r\n        </Segment>        \r\n    )\r\n}\r\n\r\nexport default UserPage","import React from 'react'\r\nimport { Grid, Button, Container, Segment, Icon } from 'semantic-ui-react'\r\nimport Rules from './Rules'\r\nimport UserPage from './UserPage'\r\nimport dbInit from '../firebase/databaseInit'\r\n\r\nconst db = dbInit()\r\nconst rankMap = {1:\"bronze\", 2:\"silver\", 3:\"gold\"}\r\n\r\nconst MyPage = ({onLogout, uid, userInfo}) => {\r\n    const onClick = () => {\r\n        db.ref(\"user_info/\" + uid + \"/status\").set(\"isMatching\");\r\n        db.ref(\"matching_info\" + '/bronze/' + uid).set(\"placeholder\")\r\n    }\r\n\r\n    console.log(userInfo, uid)\r\n\r\n    return (\r\n        <div>\r\n            <Grid textAlign='center' verticalAlign='middle'>\r\n                <Grid.Row>\r\n                <Container fluid textAlign='right' style={{marginTop: '1vh', marginBottom:'5vh'}}>\r\n                    {`안녕하세요 ${userInfo.name} 님`}  \r\n                    <Button style={{marginLeft: '1vw', marginRight:'2vw'}} onClick={onLogout}>Logout</Button>\r\n                </Container>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column style={{ maxWidth: 600}}>\r\n                        <UserPage onClick={onClick} text={'PLAY'} userInfo={userInfo}>\r\n                            <Icon name='trophy'/> \r\n                            <h2\r\n                                style={{\r\n                                display: 'inline-block', \r\n                                marginTop: '1.5vh',\r\n                                marginBottom: '1vh',\r\n\r\n                                }}> {`현재 등급: ${rankMap[userInfo.rank]}`} \r\n                            </h2>\r\n                        </UserPage> \r\n                        <Segment raised textAlign='left'>\r\n                            <Rules/>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                \r\n            </Grid>\r\n        </div>       \r\n        \r\n    )\r\n}\r\n\r\nexport default MyPage","import {useState, useEffect} from 'react'\r\nimport UserPage from './UserPage'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport dbInit from '../firebase/databaseInit'\r\n\r\n\r\nconst db = dbInit()\r\nconst rankMap = {1: \"bronze\" ,2:\"sliver\", 3:\"gold\"}\r\n\r\nconst MatchingPage = ({uid, gid, userInfo, opponentInfo}) => {\r\n\r\n    const [ready, setReady] = useState(false)\r\n    const [vsReady, setVsReady] = useState(false)\r\n    const [second, setSecond] = useState(15)\r\n    \r\n    useEffect(() => {\r\n        if(ready && vsReady){\r\n            db.ref('user_info/' + uid + '/status').set(\"isPlaying\")\r\n            db.ref('game_list/bronze/' + gid + '/startTime/' + uid).set(Date.now())\r\n        }\r\n    }, [ready, vsReady, uid, gid])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            onClick()\r\n        }, 15000)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setSecond(second-1)\r\n        }, 1000)\r\n    }, [second])\r\n\r\n    useEffect(() => {\r\n        const ref = db.ref('game_list/' + 'bronze/' + gid + '/ready')\r\n        const listner = ref.on('value', (snapshot) => {\r\n            const players = snapshot.val()\r\n            if(players){\r\n                Object.entries(players).forEach((player) => {\r\n                    if( player[0] !== uid ){\r\n                        if(!vsReady) setVsReady(true)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return () => {\r\n            ref.off('value', listner)\r\n        }\r\n    }, [gid, uid])\r\n    \r\n    const onClick = () => { \r\n        db.ref('game_list/' + 'bronze/' + gid + '/ready/' + uid).set(true)\r\n        setReady(true)\r\n    }\r\n\r\n    return (\r\n            <Grid columns={3} \r\n                style={{ height: '100vh', maxWidth: 2000, marginTop:'10vh' }}\r\n                textAlign='center'\r\n                verticalAlign='middle'\r\n            >\r\n                <Grid.Column>\r\n                    <UserPage \r\n                        text={ready ? '준비완료' : (gid ? '준비되면 클릭' : '')} \r\n                        onClick={onClick}\r\n                        userInfo={userInfo}\r\n                    >\r\n                        <h1>{userInfo.nick_name}</h1>\r\n                    </UserPage>\r\n                </Grid.Column>\r\n                <Grid.Column width={1}>\r\n                    <h1>vs</h1>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <UserPage \r\n                        text={vsReady ? '준비완료' : 'Wating...'}\r\n                        userInfo={opponentInfo}\r\n                    >\r\n                        <h1>{opponentInfo.nick_name}</h1>\r\n                    </UserPage>\r\n                </Grid.Column>\r\n                <Grid.Row style={{marginTop:'0vh', marginBotton:'0vh'}}>\r\n                    <h2>{second}초 후에 시작합니다.</h2>\r\n                </Grid.Row>\r\n            </Grid>    \r\n    )\r\n}\r\n\r\nexport default MatchingPage","import React, {useState, useEffect} from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst ErrorMessage = ({errorMessage}) => {\r\n  const [message, setMessage] = useState(errorMessage)\r\n  useEffect(() => {\r\n      if(!message)\r\n        setMessage(errorMessage)\r\n  }, [errorMessage])\r\n  return(\r\n    <Message color='red'>\r\n        <Message.Header id='message'>{message}</Message.Header>\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import React, {useState, useEffect} from 'react'\r\nimport Match from './components/Match'\r\nimport authInit from './firebase/authInit'\r\nimport LoginForm from './components/LoginLayout'\r\nimport SignUpForm from './components/SignUpLayout'\r\nimport dbInit from './firebase/databaseInit'\r\nimport MyPage from './components/MyPage'\r\nimport MatchingPage from './components/MatchingPage'\r\nimport LoaderV2 from './components/Loader'\r\nimport { Grid, Button } from 'semantic-ui-react'\r\nimport ErrorMessage from './components/ErrorMessage'\r\n\r\nconst auth = authInit()\r\nconst db = dbInit()\r\n\r\nconst App = () => {\r\n    \r\n    const [uid, setUid] = useState('unChecked')\r\n    const [gid, setGid] = useState(null)\r\n    const [oid, setOid] = useState(null)\r\n    const [userInfo, setUserInfo] = useState(null)\r\n    const [opponentInfo, setOpponentInfo] = useState(null)\r\n    const [status, setStatus] = useState('rendering')   \r\n    const [message, setMessage] = useState(null)\r\n\r\n    const userRef = db.ref('user_info/' + uid)\r\n\r\n    const getUserInfo = async function() {\r\n        const userInfo = await userRef.get().then((snapshot) => {\r\n            if(snapshot.exists()){\r\n                const currentUserInfo = snapshot.val()\r\n                console.log(currentUserInfo)\r\n                setUserInfo(currentUserInfo)\r\n                return currentUserInfo    \r\n            }\r\n        })\r\n        return userInfo\r\n    }\r\n\r\n    const getGid = async function() {\r\n        const gid = userRef.child('game_id').get('value').then((snapshot) => {\r\n            if(snapshot.exists()) {\r\n                const currentGid = snapshot.val()\r\n                setGid(currentGid)\r\n                return currentGid\r\n            }\r\n        })\r\n        return gid\r\n    }\r\n\r\n    const getOid = async function(rank, gid) {\r\n        console.log(rank)\r\n        const oid = \r\n            db.ref('game_list/' + 'bronze/' + gid +'/player_object')\r\n                .get().then((snapshot) => {\r\n                    if(snapshot.exists()){\r\n                        const playerObject = snapshot.val()\r\n                        console.log(playerObject)\r\n                        Object.keys(playerObject).map((id) => {\r\n                            if(id !== uid && !opponentInfo) {\r\n                                setOpponentInfo(playerObject[id])\r\n                                setOid(id)\r\n                                return id\r\n                            }\r\n                        })    \r\n                    }       \r\n            })\r\n        return oid\r\n    }\r\n        \r\n    useEffect(() => {\r\n        setMessage(null)\r\n    }, [status]);\r\n\r\n    useEffect(() => {\r\n        if(!uid) return\r\n        let listener = userRef.child('status').on('value', (snapshot) => {\r\n            const currentStatus = snapshot.val()\r\n            if( currentStatus !== status ) { \r\n                setStatus(currentStatus)\r\n            }\r\n        })\r\n        return () => {\r\n            userRef.child('status').off('value', listener)\r\n        }\r\n    }, [uid])\r\n\r\n    useEffect(() => {\r\n        if(status === 'isWaiting'){\r\n            setOpponentInfo(null)\r\n            setOid(null)\r\n            setGid(null)\r\n            getUserInfo()\r\n        }\r\n    }, [status])\r\n\r\n    useEffect(() => {\r\n        if(status === 'isMatched' || 'isPlaying'){\r\n            if(!oid){\r\n                getUserInfo().then((userInfo) => {\r\n                    if(!userInfo) return\r\n                    getGid().then((gid) => {\r\n                        if(!gid) return\r\n                        getOid(userInfo[\"rank\"], gid)\r\n                    })\r\n                })\r\n                return\r\n            }\r\n            if(!gid) {\r\n                console.log(gid)\r\n                getGid()\r\n            }\r\n            if(!userInfo) getUserInfo()\r\n        }\r\n    }, [status])\r\n\r\n    auth.onAuthStateChanged((user) => {\r\n        if (user) {\r\n          // User is signed in\r\n          let currentUid = user.uid\r\n          if(currentUid !== uid) setUid(currentUid)\r\n        } else {\r\n            setUid(null)\r\n            if(status === 'rendering') setStatus(null)\r\n        }\r\n    });\r\n    \r\n    const onLogin = () => {\r\n        // setIsLoading(true)\r\n        const [id, password] = document.querySelectorAll('input')\r\n        auth.signInWithEmailAndPassword(id.value, password.value).then(\r\n            console.log('Success')\r\n        ).catch((error)=>{\r\n            setMessage(error.message)\r\n        })\r\n\r\n    }\r\n\r\n    const onSignUp = () => {\r\n        // TODO: controlled state\r\n        const [\r\n            id, \r\n            password, \r\n            name, \r\n            nickName,\r\n            school\r\n        ] = document.querySelectorAll('input')\r\n        \r\n        const [grade, rating] = document.querySelectorAll('div.divider.text')\r\n\r\n        if(!grade || !rating || !name.value || !nickName.value || !school.value){\r\n            setMessage(\"Please fill in all forms.\")\r\n            return\r\n        }\r\n        let rank = 1\r\n        // TODO: variable condition check\r\n        auth.createUserWithEmailAndPassword(id.value, password.value)\r\n        .then((userCredential) => {\r\n            // Sign in   \r\n            let uid = userCredential.user.uid\r\n            db.ref('user_info/' + uid).set({\r\n                name: name.value, \r\n                nick_name: nickName.value, \r\n                school: school.value,\r\n                grade: grade.innerHTML,\r\n                rating: rating.innerHTML,\r\n                rank: rank,\r\n                status: 'isWaiting',\r\n                current: {win: 0, lose:0},\r\n                total: {win: 0, lose: 0},\r\n            }).catch((error) => console.log(error.message))\r\n\r\n            db.ref('user_interaction/' + uid).set([0])\r\n        })\r\n        .catch((error) => {\r\n            setMessage(error.message)\r\n            console.log(error.message)\r\n        });\r\n\r\n    }\r\n\r\n    const onLogout = () => {\r\n        db.ref('user_info/' + uid + \"/status\" ).set('isWaiting').then(() => {auth.signOut()})\r\n        setStatus('login')\r\n    }\r\n    \r\n    const onSignUpLoad = () => {\r\n        setStatus('signUp')\r\n    }\r\n\r\n    const onLoginLoad = () => {\r\n        setStatus('login')\r\n    }\r\n\r\n    const onCancle = () => {\r\n        db.ref('user_info/' + uid + '/status').set('isWaiting')\r\n        db.ref('matching_info/bronze/' + uid).set(null)\r\n        db.ref('user_info/' + uid + '/game_id').set(null)\r\n    }\r\n\r\n    console.log(uid, gid, oid, opponentInfo, status)\r\n\r\n    if( status === 'rendering' || uid === 'unChecked') return <LoaderV2 text=\"로딩 중...\"/>\r\n\r\n    if( !uid ){\r\n        if(status === 'signUp') return (\r\n            <Grid>\r\n                <Grid.Column>\r\n                    <SignUpForm onSignUp={onSignUp} onLoginLoad={onLoginLoad}>\r\n                        {message ? <ErrorMessage errorMessage={message}/> : null}\r\n                    </SignUpForm>\r\n                </Grid.Column> \r\n            </Grid>     \r\n        )\r\n        else return (\r\n            <Grid>\r\n                <Grid.Column>\r\n                    <LoginForm onLogin={onLogin} onSignUpLoad={onSignUpLoad}>\r\n                        {message ? <ErrorMessage errorMessage={message}/> : null}\r\n                    </LoginForm>\r\n                </Grid.Column>\r\n            </Grid>     \r\n        )\r\n    }\r\n\r\n    else {\r\n        if(status === 'isWaiting') {\r\n            if(!uid || !userInfo) return <LoaderV2 text={'정보를 불러오는 중...'}/>\r\n            else {\r\n                return(\r\n                    <MyPage onLogout={onLogout} uid={uid} userInfo={userInfo}/>\r\n                )\r\n            }\r\n        }\r\n        \r\n        else if(status === 'isMatching') return (\r\n            <Grid textAlign='center'>\r\n                <Grid.Row style={{marginTop:'15vh', height:'70vh'}}>\r\n                    <LoaderV2 text=\"매칭 중...\" />\r\n                </Grid.Row>\r\n                <Button onClick={onCancle}> 취소하기 </Button>\r\n            </Grid>\r\n        )\r\n        else if(status === 'isMatched') {\r\n            if( !uid || !gid || !userInfo || !opponentInfo ) return (\r\n                <LoaderV2 text={'게임을 불러오는 중...'}/>\r\n            )\r\n            return (\r\n                <MatchingPage \r\n                    uid={uid} \r\n                    gid={gid}\r\n                    userInfo={userInfo} \r\n                    opponentInfo={opponentInfo}\r\n                />\r\n            )\r\n        }\r\n        else if(status === 'isPlaying') {\r\n            if( !uid || !gid || !oid || !userInfo || !opponentInfo ) return (\r\n                <LoaderV2 text={'로딩 중...'}/>\r\n            )\r\n            return (\r\n                <Match \r\n                    uid={uid}\r\n                    oid={oid}\r\n                    gid={gid} \r\n                    userInfo={userInfo}\r\n                    opponentInfo={opponentInfo}\r\n                />\r\n            )\r\n        }\r\n        else return (\r\n            <Grid textAlign='center'>\r\n                <Grid.Row style={{marginTop:'15vh', height:'70vh'}}>\r\n                    <LoaderV2 text=\"장시간 지속되면 아래 버튼을 누르세요.\" />\r\n                </Grid.Row>\r\n                <Button onClick={onLogout}> 처음으로 </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}